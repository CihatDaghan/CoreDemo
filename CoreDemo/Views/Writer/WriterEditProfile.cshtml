@model UserUpdateViewModel
 
@{
    ViewData["Title"] = "WriterEditProfile";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

 

    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Yazar Profil Bilgileri Düzenleme</h4>
                <br />
                <form class="forms-sample" method="post">
                    <div class="form-group">
                        <label for="exampleInputName1">Yazar Ad Soyad</label>
                        <input type="text" asp-for="@Model.namesurname" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Kullanıcı Adı</label>
                        <input type="text" asp-for="@Model.username" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Mail Adresi</label>
                        <input type="text" asp-for="@Model.mail" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label for="exampleInputPassword4">Şifre</label>
                        <input type="text" asp-for="@Model.password" class="form-control" id="password1" />

                        @*@Html.TextBoxFor(x => x.PasswordHash, new { id = "password1", @class = "form-control" })*@
                        @*@Html.ValidationMessageFor(x => x.WriterPassword, "", new { @class = "text-danger" })*@
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Şifre Onayla</label>
                        <input type="text" asp-for="@Model.password" class="form-control" id="password2" />

                        @*@Html.TextBoxFor(x => x.PasswordHash, new { id = "password2", @class = "form-control" })  *@
                        @*@Html.ValidationMessageFor(x => x.WriterPassword, "", new { @class = "text-danger" })*@

                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Resim Yolu</label>
                        <input type="text" asp-for="@Model.imageurl" class="form-control" />

                    </div>
                    @*<div class="form-group">
                        <label>Yazar Görsel</label>
                        <input type="file" name="img[]" class="file-upload-default">
                        <div class="input-group col-xs-12">
                            <input type="text" class="form-control file-upload-info" disabled placeholder="Resim Yükle">
                            <span class="input-group-append">
                                <button class="file-upload-browse btn btn-gradient-primary" type="button">Resim Seç</button>
                            </span>
                        </div>
                    </div>*@



                    @*<div class="form-group">
            <label for="exampleTextarea1">Yazar Hakkında</label>
            @Html.TextAreaFor(x => x.WriterAbout, 10, 3, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.WriterAbout, "", new { @class = "text-danger" })


        </div>*@
                    <button type="submit" id="button" class="btn btn-gradient-primary mr-2">Güncelle</button>

                    <button class="btn btn-light">İptal</button>
                </form>
            </div>
        </div>
    </div>


<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    document.getElementById('button').onclick = function myFunction() {
        x = document.getElementById("password1").value;
        y = document.getElementById("password2").value;
        if (x != y) {
            swal("Hata!", "Şifreler Uyuşmuyor!", "error");
            return false
        }
    }
</script>